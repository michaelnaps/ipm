function dq = mpc_control(q, p, um, c1, c2)
    %% MPC Controller
    dt = p(1);
    P = p(2);
    up = (-um:1:um)';  % inputs to consider
    
    % cost function: linear quadratic regulator (based on error)
    %          cart vel.     ang. pos.      ang. vel.     prev. input
    C = @(qc) (0-q(pi-qc(3))^2;
    
    % loop for iteration checks
    c = Inf;
    for i = 1:length(up)
        
        % solve for states at next state inputs (unrefined)
        dqc = statespace([q(1:4); up(i)], c1, c2);
        qc = [
              q(1) + dt*P*dqc(1);
              q(2) + dt*P*dqc(2);
              q(3) + dt*P*dqc(3);
              q(4) + dt*P*dqc(4);
             ];
        
        % check cost at end of prediction horizon
        Cp = C(qc);
        if (Cp < c)
            u = up(i);
            c = Cp;
        end
        
    end
    
    % Return state variables with new inputs
    dq = [statespace([q(1:4); u], c1, c2); c];
end